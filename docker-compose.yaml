version: '3'

services:

    zookeeper:
        image: zookeeper
        ports: 
            - 2181:2181
        environment:
            ZOO_TICK_TIME: 2000
            ZOO_MY_ID: 1

    kafka:
        image: confluentinc/cp-kafka
        restart: always
        depends_on:
            - zookeeper
        environment:
            KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    
    connect:
        image: confluentinc/cp-kafka-connect:latest
        restart: always
        ports: 
            - 8083:28083
        depends_on: 
            - zookeeper
            - kafka
            - elasticsearch
        environment: 
            CONNECT_REST_PORT: 28083
            CONNECT_GROUP_ID: kafka-connect
            CONNECT_BOOTSTRAP_SERVERS: kafka:29092
            CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
            CONNECT_CONFIG_STORAGE_TOPIC: default.config
            CONNECT_OFFSET_STORAGE_TOPIC: default.offsets
            CONNECT_STATUS_STORAGE_TOPIC: default.status
            CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
            CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_REST_ADVERTISED_HOST_NAME: connect,localhost
            CONNECT_REPLICATION_FACTOR: 1
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
        volumes: 
            - ./kafka-connect-jars:/etc/kafka-connect/jars

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        restart: always
        environment: 
            "discovery.type": single-node
            "bootstrap.memory_lock": "true"
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        ports: 
            - 9200:9200
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elasticsearch:/usr/share/elasticsearch/data
    
    kibana:
        depends_on: 
            - elasticsearch
        image: docker.elastic.co/kibana/kibana:7.9.1
        ports: 
            - 5601:5601
        environment: 
            SERVER_NAME: 0.0.0.0
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200

    postgres_keycloak:
        image: postgres:alpine
        volumes:
            - postgres-keycloak:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: keycloak
            POSTGRES_DB: keycloak
            POSTGRES_PASSWORD: 123456789_keycloak
        ports:
            - 5432:5432

    keycloak:
        restart: always
        depends_on:
            - kafka
            - postgres_keycloak
            - elasticsearch
        build:
            context: ./
            dockerfile: Dockerfile
        ports: 
            - 8180:8080
        environment:
            KEYCLOAK_LOGLEVEL: DEBUG
            KEYCLOAK_USER: admin
            KEYCLOAK_PASSWORD: admin
            DB_VENDOR: postgres
            DB_ADDR: postgres_keycloak
            DB_USER: keycloak
            DB_PASSWORD: 123456789_keycloak

    grafana:
        image: grafana/grafana
        ports: 
            - 3000:3000
        volumes:
            - grafana:/var/lib/grafana
        environment: 
            GF_INSTALL_PLUGINS: grafana-piechart-panel


volumes:
    elasticsearch:
    grafana:
    postgres-keycloak:

    
